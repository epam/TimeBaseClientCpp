name: Release dxapi

on:
  push:
    branches: [release-*, wip-workflow]
    
jobs:
  Prepare-Release:
    name: Prepare
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Prepare branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b workflow-$GITHUB_RUN_ID
          versionSnapshot=`grep 'version=' project.properties | sed 's/version=\([^-]*\)/\1/'`
          versionRelease=`echo $versionSnapshot | sed 's/\([^-]*\)-SNAPSHOT/\1/'`
          versionSnapshotNext=`echo $versionSnapshot | perl -pe 's/^((\d+\.)*)(\d+)(.*)$/$1.($3+1).$4/e'`
          echo "$versionSnapshot -> $versionRelease  -> $versionSnapshotNext"
          sed -i "s/version=$versionSnapshot/version=$versionRelease/" project.properties
          git commit -am "[skip-ci] Generate release version"
          sed -i "s/version=$versionRelease/version=$versionSnapshotNext/" project.properties
          git commit -am "[skip-ci] Generate next snapshot version"
          git push origin HEAD

  Build-Dxapi-Linux:
    runs-on: ubuntu-latest
    needs: [Prepare-Release]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Build Dxapi
        run: make -C .
        env: 
          CC: clang
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dxapi-linux
          path: |
            iclude/native/**/*.h
            bin/libdxapi-x64.a
            
  Build-Dxapi-MacOS:
    runs-on: macos-latest
    needs: [Prepare-Release]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Build Dxapi
        run: make -C .
        env:
          CC: clang
          OS: MACOS
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dxapi-macos
          path: |
            iclude/native/**/*.h
            bin/libdxapi-x64.a
            
  Build-Dxapi-Windows:
    runs-on: windows-latest
    needs: [Prepare-Release]
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Use MSBuild
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Build Solution
      run: msbuild dxapi.sln /p:configuration=release /p:platform=x64 /t:rebuild
    - name: Build Debug Solution
      run: msbuild dxapi.sln /p:configuration=debug /p:platform=x64 /t:rebuild
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dxapi-windows
        path: |
          iclude/native/**/*.h
          bin/dxapi-x64.lib
          bin/dxapi-x64d.lib
          bin/dxapi-x64d.pdb
    
  Release-Dxapi:
    name: Release
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
    needs: [Build-Dxapi-Linux, Build-Dxapi-MacOS, Build-Dxapi-Windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Release branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch
          git checkout -b workflow-$GITHUB_RUN_ID origin/workflow-$GITHUB_RUN_ID~1
          versionRelease=`grep 'version=' gradle.properties | sed 's/version=\([^-]*\)/\1/'`
          echo $versionRelease
          git push origin origin/workflow-$GITHUB_RUN_ID:$GITHUB_REF
          
  Publish-Dxapi-Windows:
    needs: [Release-Dxapi]
    runs-on: windows-latest
    steps:
      - name: Using Nuget
        uses: nuget/setup-nuget@v1
      - name: Build Nuget package
        run: nuget pack dxapi.nuspec
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dxapi-nuget-package
          path:
            Nuget.Package.Name.1.0.0.nupkg
          
  Cleanup-Release:
    name: Cleanup
    if: ${{ always() && !contains(github.event.head_commit.message, '[skip-ci]') }}
    needs: [Publish-Dxapi-Windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cleanup
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git push origin --delete workflow-$GITHUB_RUN_ID || true
